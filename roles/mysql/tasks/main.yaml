- name: Install the newest version of package "mysql-server"
  ansible.builtin.apt:
    name: mysql-server
    state: present

- name: start mysql service
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: true

- name: Copy file override.cnf to /etc/mysql/mysql.conf.d/override.cnf
  ansible.builtin.template:
    src: override.cnf.j2
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify: "restart mysql service"

- name: Copy file my_mysql.cnf.j2 to /etc/mysql/my.cnf
  ansible.builtin.template:
    src: my_mysql.cnf.j2
    dest: /etc/mysql/my.cnf
  notify: "restart mysql service"

- name: Install the newest version of package "python3-pymysql"
  ansible.builtin.apt:
    name: python3-pymysql
    state: present

- name: MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - source reset
    - reset replica

- name: MySQL user Agama
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"

- name: MySql user for replication
  community.mysql.mysql_user:
    name: "{{mysql_user_replication}}"
    password: "{{mysql_replication_password}}"
    priv: '*.*:REPLICATION SLAVE'
    login_unix_socket: /var/run/mysqld/mysqld.sock
    host: "%"
  no_log: true

- name: replica server read_only
  community.mysql.mysql_variables:
    variable: read_only
    value: "{{ 'OFF' if inventory_hostname == mysql_hostname else 'ON' }}"
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - reset source
    - reset replica

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers

- name: mysql directory
  ansible.builtin.file:
    path: /home/backup/mysql
    state: directory
    owner: backup
    group: backup
    mode: '0775'

- name: cp my_mysql_backup.cnf.j2 to /home/backup/.my.cnf
  template:
    src: my_mysql_backup.cnf.j2
    dest: /home/backup/.my.cnf
    owner: backup
    group: backup
    force: yes
    mode: '0600'
  no_log: true

- name: MySql user for backup
  mysql_user:
    name: "{{mysql_user_backup}}"
    password: "{{mysql_backup_password}}"
    priv: '{{mysql_database}}.*:LOCK TABLES,SELECT'
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Cronjob cp
  template:
    src: mysql-backup.j2
    dest: /etc/cron.d/mysql-backup
